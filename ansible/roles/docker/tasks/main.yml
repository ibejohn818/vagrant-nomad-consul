---
- name: Get DEB architecture
  shell: dpkg --print-architecture
  register: deb_arch

- name: add docker gpg
  shell:
    cmd: curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc

- name: add docker repo
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ deb_arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable"
    state: present
    filename: docker

- name: install docker
  package:
    state: present
    name:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io 
      - docker-buildx-plugin 
      - docker-compose-plugin

- name: docker config.json
  copy:
    src: files/config.json
    dest: /etc/docker/config.json

- name: consul registry auth dir
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
  with_items:
    - /etc/docker/certs.d
    - /etc/docker/certs.d/registry.service.consul
    - /etc/docker/certs.d/registry.service.dc1.consul

- name: consul registry auth certs
  ansible.builtin.copy:
    src: "{{ tls_cert_path }}/{{ item.src }}"
    dest: "/etc/docker/certs.d/registry.service.consul/{{ item.dest }}"
  with_items:
    - src: "service/client.pem"
      dest: "client.cert"
    - src: "service/client-key.pem"
      dest: "client.key"
    - src: "service-ca.pem"
      dest: "ca.crt"

- name: dc1 consul registry auth certs
  ansible.builtin.copy:
    src: "{{ tls_cert_path }}/{{ item.src }}"
    dest: "/etc/docker/certs.d/registry.service.dc1.consul/{{ item.dest }}"
  with_items:
    - src: "service/client.pem"
      dest: "client.cert"
    - src: "service/client-key.pem"
      dest: "client.key"
    - src: "service-ca.pem"
      dest: "ca.crt"

- name: copy dc1 service ca cert to trusted root
  ansible.builtin.copy:
    src: "{{ tls_cert_path }}/service-ca.pem"
    dest: "/usr/local/share/ca-certificates/service-ca.pem"

- name: update trusted root ca's
  ansible.builtin.command: /usr/sbin/update-ca-certificates
  

- name:
  service:
    name: docker
    enabled: yes
    state: started

- name: docker group to vagrant user 
  user:
    name: vagrant
    state: present
    append: yes
    groups: docker
